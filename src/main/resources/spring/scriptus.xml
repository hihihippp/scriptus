<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       	"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
		default-autowire="byName"
        default-init-method="init" default-destroy-method="destroy">
        
        <!-- Scriptus master Spring config file. -->
    <context:annotation-config/>
    <context:property-placeholder />

    <bean id="config" class="net.ex337.scriptus.config.ScriptusConfig" />

    <bean id="waker" class="net.ex337.scriptus.scheduler.ProcessWaker" />

    <bean id="routing" class="net.ex337.scriptus.transport.MessageRouting" />

    <bean id="locks" class="net.ex337.scriptus.scheduler.ProcessLocks" />

    <bean id="dummyTransport" class="net.ex337.scriptus.transport.impl.DummyTransport" 
    	p:defaultResponse="response">
    	<property name="regexpResponseMatchers">
			<map>
				<entry key="SYN" value="ACK"/>
				<entry key="D[A-Z]*G" value="CAT"/>
				<entry key="I have ([0-9]*) cats" value="I have $1 dogs"/>
				<entry key="I have ([0-9]*) DOCS" value="#{ 'ffooo' }"/>
			</map>
    	</property>
   	</bean>
    	
    <bean id="personalTransport" class="net.ex337.scriptus.transport.impl.PersonalTransport" />

    <bean id="twitterTransport" class="net.ex337.scriptus.transport.twitter.TwitterTransportImpl">
		<lookup-method name="createTwitterClient" bean="twitterClient"/>
    </bean>
    
    <bean id="twitterClientMock" class="net.ex337.scriptus.transport.twitter.TwitterClientMock" scope="prototype"/>
    <bean id="twitterClientImpl" class="net.ex337.scriptus.transport.twitter.TwitterClientImpl" scope="prototype"/>

    <alias name="twitterClientMock" alias="twitterClient" />
    	
    <bean id="facebookTransport" class="net.ex337.scriptus.transport.facebook.FacebookTransportImpl" >
		<lookup-method name="createFacebookClient" bean="facebookClient"/>
    </bean>

	<bean id="facebookClientImpl" class="net.ex337.scriptus.transport.facebook.FacebookClientImpl" scope="prototype"/>

	<alias name="facebookClientImpl" alias="facebookClient" />

	<bean scope="prototype" id="scriptProcess" class="net.ex337.scriptus.model.ScriptProcess"/>
	<bean scope="prototype" id="transportAccessToken" class="net.ex337.scriptus.model.TransportAccessToken"/>


	<bean id="facade" class="net.ex337.scriptus.ScriptusFacade"/>

    <bean id="baseDatastore" abstract="true" >
		<lookup-method name="createScriptProcess" bean="scriptProcess"/>
		<lookup-method name="createTransportAccessToken" bean="transportAccessToken"/>
    </bean>

    <import resource="scriptus-datastore-${DatastoreType}.xml"/>
    
	<!-- bean id="datastore" class="net.ex337.scriptus.datastore.ScriptusDatastoreSwitch" />-->

    <bean id="scheduler" class="net.ex337.scriptus.scheduler.ProcessSchedulerImpl" />

	<!-- for frontend -->
    <bean id="scriptusHeadlineReader" class="net.ex337.scriptus.server.ScriptusHeadlineReader" >
      <property name="atomFeed" value="http://ianso.github.com/scriptus/atom.xml"/>
    </bean>
    
</beans>